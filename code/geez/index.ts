import { build, transform } from '~/base'
import symbols from './symbols.json'

export { symbols }

export const syllables = symbols.filter(x =>
  x.roles.includes('syllable'),
)

export const punctuations = symbols.filter(x =>
  x.roles.includes('punctuation'),
)

export const numerals = symbols.filter(x => x.roles.includes('numeral'))

const syllablesMap = {
  ሀ: 'hA',
  ሁ: 'hu',
  ሂ: 'hi',
  ሃ: 'ha',
  ሄ: 'he',
  ህ: 'hi$',
  ሆ: 'ho',
  ለ: 'lA',
  ሉ: 'lu',
  ሊ: 'li',
  ላ: 'la',
  ሌ: 'le',
  ል: 'li$',
  ሎ: 'lo',
  ሏ: 'lw~a',
  ሐ: 'hA',
  ሑ: 'hu',
  ሒ: 'hi',
  ሓ: 'ha',
  ሔ: 'he',
  ሕ: 'hi$',
  ሖ: 'ho',
  ሗ: 'hw~a',
  መ: 'mA',
  ሙ: 'mu',
  ሚ: 'mi',
  ማ: 'ma',
  ሜ: 'me',
  ም: 'mi$',
  ሞ: 'mo',
  ሟ: 'mw~a',
  ሠ: 'sA',
  ሡ: 'su',
  ሢ: 'si',
  ሣ: 'sa',
  ሤ: 'se',
  ሥ: 'si$',
  ሦ: 'so',
  ሧ: 'sw~a',
  ረ: 'rA',
  ሩ: 'ru',
  ሪ: 'ri',
  ራ: 'ra',
  ሬ: 're',
  ር: 'ri$',
  ሮ: 'ro',
  ሯ: 'rw~a',
  ሰ: 'sA',
  ሱ: 'su',
  ሲ: 'si',
  ሳ: 'sa',
  ሴ: 'se',
  ስ: 'si$',
  ሶ: 'so',
  ሷ: 'sw~a',
  ሸ: 'xA',
  ሹ: 'xu',
  ሺ: 'xi',
  ሻ: 'xa',
  ሼ: 'xe',
  ሽ: 'xi$',
  ሾ: 'xo',
  ሿ: 'xw~a',
  ቀ: 'k!A',
  ቁ: 'k!u',
  ቂ: 'k!i',
  ቃ: 'k!a',
  ቄ: 'k!e',
  ቅ: 'k!i$',
  ቆ: 'k!o',
  ቈ: 'k!w~A',
  ቊ: 'k!w~i',
  ቋ: 'k!w~a',
  ቌ: 'k!w~e',
  ቍ: 'k!w~i$',
  በ: 'bA',
  ቡ: 'bu',
  ቢ: 'bi',
  ባ: 'ba',
  ቤ: 'be',
  ብ: 'bi$',
  ቦ: 'bo',
  ቧ: 'bw~a',
  ቨ: 'vA',
  ቩ: 'vu',
  ቪ: 'vi',
  ቫ: 'va',
  ቬ: 've',
  ቭ: 'vi$',
  ቮ: 'vo',
  ቯ: 'vw~a',
  ተ: 'tA',
  ቱ: 'tu',
  ቲ: 'ti',
  ታ: 'ta',
  ቴ: 'te',
  ት: 'ti$',
  ቶ: 'to',
  ቷ: 'tw~a',
  ቸ: 'txA',
  ቹ: 'txu',
  ቺ: 'txi',
  ቻ: 'txa',
  ቼ: 'txe',
  ች: 'txi$',
  ቾ: 'txo',
  ቿ: 'txw~a',
  ኀ: 'hA',
  ኁ: 'hu',
  ኂ: 'hi',
  ኃ: 'ha',
  ኄ: 'he',
  ኅ: 'hi$',
  ኆ: 'ho',
  ኈ: 'hy~A',
  ኊ: 'hw~i',
  ኋ: 'hw~a',
  ኌ: 'hw~e',
  ኍ: 'hw~i$',
  ነ: 'nA',
  ኑ: 'nu',
  ኒ: 'ni',
  ና: 'na',
  ኔ: 'ne',
  ን: 'ni$',
  ኖ: 'no',
  ኗ: 'nw~a',
  ኘ: 'ny~A',
  ኙ: 'ny~u',
  ኚ: 'ny~i',
  ኛ: 'ny~a',
  ኜ: 'ny~e',
  ኝ: 'ny~i$',
  ኞ: 'ny~o',
  ኟ: 'ny~w~a',
  አ: "'A",
  ኡ: "'u",
  ኢ: "'i",
  ኣ: "'a",
  ኤ: "'e",
  እ: "'i$",
  ኦ: "'o",
  ኧ: "'w~a",
  ከ: 'kA',
  ኩ: 'ku',
  ኪ: 'ki',
  ካ: 'ka',
  ኬ: 'ke',
  ክ: 'ki$',
  ኮ: 'ko',
  ኰ: 'ky~A',
  ኲ: 'kw~i',
  ኳ: 'kw~a',
  ኴ: 'kw~e',
  ኵ: 'kw~i$',
  ኸ: 'hA',
  ኹ: 'hu',
  ኺ: 'hi',
  ኻ: 'ha',
  ኼ: 'he',
  ኽ: 'hi$',
  ኾ: 'ho',
  ዀ: 'hy~A',
  ዂ: 'hw~i',
  ዃ: 'hw~a',
  ዄ: 'hw~e',
  ዅ: 'hw~i$',
  ወ: 'wA',
  ዉ: 'wu',
  ዊ: 'wi',
  ዋ: 'wa',
  ዌ: 'we',
  ው: 'wi$',
  ዎ: 'wo',
  ዐ: "'A",
  ዑ: "'u",
  ዒ: "'i",
  ዓ: "'a",
  ዔ: "'e",
  ዕ: "'i$",
  ዖ: "'o",
  ዘ: 'zA',
  ዙ: 'zu',
  ዚ: 'zi',
  ዛ: 'za',
  ዜ: 'ze',
  ዝ: 'zi$',
  ዞ: 'zo',
  ዟ: 'zw~a',
  ዠ: 'jA',
  ዡ: 'ju',
  ዢ: 'ji',
  ዣ: 'ja',
  ዤ: 'je',
  ዥ: 'ji$',
  ዦ: 'jo',
  ዧ: 'jw~a',
  የ: 'yA',
  ዩ: 'yu',
  ዪ: 'yi',
  ያ: 'ya',
  ዬ: 'ye',
  ይ: 'yi$',
  ዮ: 'yo',
  ደ: 'dA',
  ዱ: 'du',
  ዲ: 'di',
  ዳ: 'da',
  ዴ: 'de',
  ድ: 'di$',
  ዶ: 'do',
  ዷ: 'dw~a',
  ጀ: 'djA',
  ጁ: 'dju',
  ጂ: 'dji',
  ጃ: 'dja',
  ጄ: 'dje',
  ጅ: 'dji$',
  ጆ: 'djo',
  ጇ: 'djw~a',
  ገ: 'gA',
  ጉ: 'gu',
  ጊ: 'gi',
  ጋ: 'ga',
  ጌ: 'ge',
  ግ: 'gi$',
  ጎ: 'go',
  ጐ: 'gy~A',
  ጒ: 'gw~i',
  ጓ: 'gw~a',
  ጔ: 'gw~e',
  ጕ: 'gw~i$',
  ጠ: 't!A',
  ጡ: 't!u',
  ጢ: 't!i',
  ጣ: 't!a',
  ጤ: 't!e',
  ጥ: 't!i$',
  ጦ: 't!o',
  ጧ: 't!w~a',
  ጨ: 'tx!A',
  ጩ: 'tx!u',
  ጪ: 'tx!i',
  ጫ: 'tx!a',
  ጬ: 'tx!e',
  ጭ: 'tx!i$',
  ጮ: 'tx!o',
  ጯ: 'tx!w~a',
  ጰ: 'p!A',
  ጱ: 'p!u',
  ጲ: 'p!i',
  ጳ: 'p!a',
  ጴ: 'p!e',
  ጵ: 'p!i$',
  ጶ: 'p!o',
  ጷ: 'p!w~a',
  ጸ: 'ts!A',
  ጹ: 'ts!u',
  ጺ: 'ts!i',
  ጻ: 'ts!a',
  ጼ: 'ts!e',
  ጽ: 'ts!i$',
  ጾ: 'ts!o',
  ጿ: 'ts!w~a',
  ፀ: 'ts!A',
  ፁ: 'ts!u',
  ፂ: 'ts!i',
  ፃ: 'ts!a',
  ፄ: 'ts!e',
  ፅ: 'ts!i$',
  ፆ: 'ts!o',
  ፈ: 'fA',
  ፉ: 'fu',
  ፊ: 'fi',
  ፋ: 'fa',
  ፌ: 'fe',
  ፍ: 'fi$',
  ፎ: 'fo',
  ፏ: 'fw~a',
  ፐ: 'pA',
  ፑ: 'pu',
  ፒ: 'pi',
  ፓ: 'pa',
  ፔ: 'pe',
  ፕ: 'pi$',
  ፖ: 'po',
  ፗ: 'pw~a',
}

const punctuationsMap = {
  '፠': '',
  '፡': '',
  '።': '.',
  '፣': ',',
  '፤': ';',
  '፥': ':',
  '፦': ':',
  '፧': '?',
  '፨': '',
}

const map = {
  ...syllablesMap,
  ...punctuationsMap,
}

/**
 * Build trie.
 */

const trie = build(map)

/**
 * Transform the text.
 */

const make = (text: string) => transform(text, trie, map)

export default make
